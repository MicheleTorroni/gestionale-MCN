package guiNew;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.sql.SQLException;
import java.util.ArrayList;

import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;

import entita.Prodotto;
import entita.Tappeto;
import utility.ColorView;
import utility.DbHelper;

public class PanelNewTappeto extends JPanel {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	JLabel quantita = new JLabel("quantita");
	JTextField areaQuantita = new JTextField(15);
	JLabel altezza = new JLabel("altezza");
	JTextField areaAltezza = new JTextField(15);
	JLabel larghezza = new JLabel("larghezza");
	JTextField areaLarghezza = new JTextField(15);
	JLabel prezzo = new JLabel("prezzo");
	JTextField areaPrezzo = new JTextField(15);
	JLabel top = new JLabel("scelta top");
	
	ArrayList<Prodotto> listaProdotti = new ArrayList<>();
	ArrayList<Prodotto> listaTop = new ArrayList<>();
	ArrayList<Prodotto> listaBase = new ArrayList<>();
	ArrayList<Prodotto> listaAntinciampo = new ArrayList<>();
	
	//DA CAMBIARE
		String[] tops = {"topDummy1","topDummy2","topDummy3"};
		JComboBox<String> areaTop = new JComboBox<>();
		//
	JLabel base = new JLabel("scelta base");
	//DA CAMBIARE
		String[] basi = {"baseDummy1","baseDummy2","baseDummy3"};
		JComboBox<String> areaBase = new JComboBox<>();
		//
	JLabel antinciampo = new JLabel("scelta antinciampo");
	//DA CAMBIARE
		String[] antinciampi = {"nessunAntinciampo","antinciampoDummy1","antinciampoDummy2"};
		JComboBox<String> areaAntinciampo = new JComboBox<>();
		//
	
	JButton salva = new JButton("salva");
	
	JPanel grid = new JPanel(new GridBagLayout());
	GridBagConstraints gbc = new GridBagConstraints();
	JLabel placeholder = new JLabel(" ");
	
	public PanelNewTappeto(FrameForNewTappetoInsegna padre) {
		
		riempiGriglia();
		
		this.setLayout(new BorderLayout());
		this.add(grid);
		
		funzioniBottoni(padre);
		colori();
		dimensioni();
		
		this.setVisible(true);
	}
	
	private void riempiGriglia() {
		gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.insets = new Insets(7, 7, 7, 7);
        
        grid.add(quantita, gbc);
		gbc.gridx++;
		grid.add(areaQuantita, gbc);
		gbc.gridx = 0;
        gbc.gridy++;
		grid.add(altezza, gbc);
		gbc.gridx++;
		grid.add(areaAltezza, gbc);
		gbc.gridx = 0;
        gbc.gridy++;
        grid.add(larghezza, gbc);
		gbc.gridx++;
		grid.add(areaLarghezza, gbc);
		gbc.gridx = 0;
		gbc.gridy++;
		grid.add(top, gbc);
		gbc.gridx++;
		grid.add(areaTop, gbc);
		gbc.gridx = 0;
		gbc.gridy++;
		grid.add(base, gbc);
		gbc.gridx++;
		grid.add(areaBase, gbc);
		gbc.gridx = 0;
		gbc.gridy++;
		grid.add(antinciampo, gbc);
		gbc.gridx++;
		grid.add(areaAntinciampo, gbc);
		gbc.gridx = 0;
		gbc.gridy++;
		grid.add(prezzo, gbc);
		gbc.gridx++;
		grid.add(areaPrezzo, gbc);
		gbc.gridx = 0;
		gbc.gridy++;
		
        grid.add(placeholder, gbc);
        gbc.gridy++;
        gbc.fill = GridBagConstraints.NONE;
        gbc.gridwidth = 2;
		grid.add(salva, gbc);
	}
	
	private void colori() {
		this.setBackground(ColorView.myGray());
		grid.setBackground(ColorView.myGray());
		salva.setBackground(ColorView.myOrange());
		
		
		quantita.setForeground(Color.WHITE);
		altezza.setForeground(Color.WHITE);
		larghezza.setForeground(Color.WHITE);
		top.setForeground(Color.WHITE);
		base.setForeground(Color.WHITE);
		antinciampo.setForeground(Color.WHITE);
		prezzo.setForeground(Color.WHITE);
		salva.setForeground(Color.WHITE);
	}
	
	private void dimensioni() {
		this.setMinimumSize(new Dimension(500, 300));
		
		quantita.setFont(new Font("TimesRoman", Font.PLAIN, 20));
		areaQuantita.setFont(new Font("TimesRoman", Font.ITALIC, 20));
		altezza.setFont(new Font("TimesRoman", Font.PLAIN, 20));
		areaAltezza.setFont(new Font("TimesRoman", Font.ITALIC, 20));
		larghezza.setFont(new Font("TimesRoman", Font.PLAIN, 20));
		areaLarghezza.setFont(new Font("TimesRoman", Font.ITALIC, 20));
		top.setFont(new Font("TimesRoman", Font.PLAIN, 20));
		areaTop.setFont(new Font("TimesRoman", Font.ITALIC, 20));
		base.setFont(new Font("TimesRoman", Font.PLAIN, 20));
		areaBase.setFont(new Font("TimesRoman", Font.ITALIC, 20));
		antinciampo.setFont(new Font("TimesRoman", Font.PLAIN, 20));
		areaAntinciampo.setFont(new Font("TimesRoman", Font.ITALIC, 20));
		prezzo.setFont(new Font("TimesRoman", Font.PLAIN, 20));
		areaPrezzo.setFont(new Font("TimesRoman", Font.ITALIC, 20));
		
		salva.setFont(new Font("TimesRoman", Font.BOLD, 25));
	}
	
	private void funzioniBottoni(FrameForNewTappetoInsegna padre) {
		
		salva.addActionListener(e->{
			
			String codice_tappeto="0";
			try {
				codice_tappeto = DbHelper.maxTappeti();
			} catch (ClassNotFoundException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			} catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			
			Tappeto t;
			try {
				t = new Tappeto(
						codice_tappeto,
						"DA INIZIARE",
						areaQuantita.getText(),
						areaAltezza.getText(),
						areaLarghezza.getText(),
						"0000-01-01",
						areaPrezzo.getText(),
						DbHelper.maxOrdini(),
						padre.getCreatore().getCodiceLavoratore());
				padre.aggiungiTappeto(t);
			} catch (ClassNotFoundException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			} catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
		
	});
	};
}
