package database;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDateTime;
import java.util.logging.Level;
import java.util.logging.Logger;

import entita.Cliente;
import entita.Lavoratore;
import entita.Ordine;
import entita.Prodotto;

public class MysqlInsert {
	
	static Query q = new Query();
	
	public static void aggiungiProdotto(Prodotto p) throws ClassNotFoundException, SQLException {
		try (Connection conn = DriverManager.getConnection(q.URL, q.USER, q.PASSWORD);
				Statement stmt = conn.createStatement();
				PreparedStatement pstmt = conn.prepareStatement(q.NEW_PRODOTTO);) {
			Class.forName(q.DRIVER);
			
			pstmt.setInt(1, Integer.valueOf(p.getCodiceProdotto()));
			pstmt.setString(2, p.getDescrizione());
			pstmt.setString(3, p.getTipologiaProdotto());
			pstmt.setInt(4, Integer.valueOf(p.getCodiceLavoratore()));
			
			
			pstmt.execute();

		} catch (ClassNotFoundException | SQLException ex) {
			Logger.getLogger(Mysql.class.getName()).log(Level.SEVERE, null, ex);
		}
	}
	
	public static void aggiungiMaterialeTop(Prodotto p) throws ClassNotFoundException, SQLException {
		try (Connection conn = DriverManager.getConnection(q.URL, q.USER, q.PASSWORD);
				Statement stmt = conn.createStatement();
				PreparedStatement pstmt = conn.prepareStatement(q.NEW_MATERIALETOP);) {
			Class.forName(q.DRIVER);
			
			pstmt.setInt(1, Integer.valueOf(p.getCodiceProdotto()));
			pstmt.setString(2, p.getTipologiaTop());
			pstmt.setString(3, p.getColore());
			pstmt.setString(4, p.getTipoLama());
			pstmt.setFloat(5, Float.parseFloat(p.getCostoM2()));
			
			
			pstmt.execute();

		} catch (ClassNotFoundException | SQLException ex) {
			Logger.getLogger(Mysql.class.getName()).log(Level.SEVERE, null, ex);
		}
	}
	
	public static void aggiungiBase(Prodotto p) throws ClassNotFoundException, SQLException {
		try (Connection conn = DriverManager.getConnection(q.URL, q.USER, q.PASSWORD);
				Statement stmt = conn.createStatement();
				PreparedStatement pstmt = conn.prepareStatement(q.NEW_BASE);) {
			Class.forName(q.DRIVER);
			
			pstmt.setInt(1, Integer.valueOf(p.getCodiceProdotto()));
			pstmt.setString(2, p.getTipologiaBase());
			pstmt.setString(3, p.getTipoLama());
			pstmt.setFloat(4, Float.parseFloat(p.getCostoM2()));
			
			
			pstmt.execute();

		} catch (ClassNotFoundException | SQLException ex) {
			Logger.getLogger(Mysql.class.getName()).log(Level.SEVERE, null, ex);
		}
	}
	
	public static void aggiungiAntinciampo(Prodotto p) throws ClassNotFoundException, SQLException {
		try (Connection conn = DriverManager.getConnection(q.URL, q.USER, q.PASSWORD);
				Statement stmt = conn.createStatement();
				PreparedStatement pstmt = conn.prepareStatement(q.NEW_ANTINCIAMPO);) {
			Class.forName(q.DRIVER);
			
			pstmt.setInt(1, Integer.valueOf(p.getCodiceProdotto()));
			pstmt.setString(2, p.getTipologiaAntinciampo());
			pstmt.setString(3, p.getTipoLama());
			pstmt.setFloat(4, Float.parseFloat(p.getCostoM()));
			
			
			pstmt.execute();

		} catch (ClassNotFoundException | SQLException ex) {
			Logger.getLogger(Mysql.class.getName()).log(Level.SEVERE, null, ex);
		}
	}
	
	public static void aggiungiMaterialeTelaio(Prodotto p) throws ClassNotFoundException, SQLException {
		try (Connection conn = DriverManager.getConnection(q.URL, q.USER, q.PASSWORD);
				Statement stmt = conn.createStatement();
				PreparedStatement pstmt = conn.prepareStatement(q.NEW_MATERIALETELAIO);) {
			Class.forName(q.DRIVER);
			
			pstmt.setInt(1, Integer.valueOf(p.getCodiceProdotto()));
			pstmt.setString(2, p.getTipologiaTelaio());
			pstmt.setString(3, p.getTipoFresa());
			pstmt.setFloat(4, Float.parseFloat(p.getCostoM2()));
			
			
			pstmt.execute();

		} catch (ClassNotFoundException | SQLException ex) {
			Logger.getLogger(Mysql.class.getName()).log(Level.SEVERE, null, ex);
		}
	}
	
	public static void aggiungiNeon(Prodotto p) throws ClassNotFoundException, SQLException {
		
	}
	
	public static void aggiungiLed(Prodotto p) throws ClassNotFoundException, SQLException {
		
	}
	
	public static void aggiungiLavoratore(Lavoratore l) throws SQLException, ClassNotFoundException {
		try (Connection conn = DriverManager.getConnection(q.URL, q.USER, q.PASSWORD);
				Statement stmt = conn.createStatement();
				PreparedStatement pstmt = conn.prepareStatement(q.NEW_LAVORATORE);) {
			Class.forName(q.DRIVER);
			
			pstmt.setInt(1, Integer.valueOf(l.getCodiceLavoratore()));
			pstmt.setString(2, l.getCodiceFiscale());
			pstmt.setFloat(3, Float.parseFloat(l.getStipendio()));
			pstmt.setString(4, l.getNome());
			pstmt.setString(5, l.getCognome());
			pstmt.setString(6, l.getDataNascita());
			pstmt.setString(7, l.getTipologiaLavoratore());
			pstmt.setString(8, l.getPassword());
			
			pstmt.execute();

		} catch (ClassNotFoundException | SQLException ex) {
			Logger.getLogger(Mysql.class.getName()).log(Level.SEVERE, null, ex);
		}
	}
	
	public static void aggiungiAmministratore(Lavoratore l) throws SQLException, ClassNotFoundException {
		try (Connection conn = DriverManager.getConnection(q.URL, q.USER, q.PASSWORD);
				Statement stmt = conn.createStatement();
				PreparedStatement pstmt = conn.prepareStatement(q.NEW_AMMINISTRATORE);) {
			Class.forName(q.DRIVER);
			
			pstmt.setInt(1, Integer.valueOf(l.getCodiceLavoratore()));
			
			pstmt.execute();

		} catch (ClassNotFoundException | SQLException ex) {
			Logger.getLogger(Mysql.class.getName()).log(Level.SEVERE, null, ex);
		}
	}
	
	public static void aggiungiVenditore(Lavoratore l) throws SQLException, ClassNotFoundException {
		try (Connection conn = DriverManager.getConnection(q.URL, q.USER, q.PASSWORD);
				Statement stmt = conn.createStatement();
				PreparedStatement pstmt = conn.prepareStatement(q.NEW_VENDITORE);) {
			Class.forName(q.DRIVER);
			
			pstmt.setInt(1, Integer.valueOf(l.getCodiceLavoratore()));
			pstmt.setInt(2, 0);
			
			pstmt.execute();

		} catch (ClassNotFoundException | SQLException ex) {
			Logger.getLogger(Mysql.class.getName()).log(Level.SEVERE, null, ex);
		}
	}
	
	public static void aggiungiArtigiano(Lavoratore l) throws SQLException, ClassNotFoundException {
		try (Connection conn = DriverManager.getConnection(q.URL, q.USER, q.PASSWORD);
				Statement stmt = conn.createStatement();
				PreparedStatement pstmt = conn.prepareStatement(q.NEW_ARTIGIANO);) {
			Class.forName(q.DRIVER);
			
			pstmt.setInt(1, Integer.valueOf(l.getCodiceLavoratore()));
			pstmt.setInt(2, 0);
			
			pstmt.execute();

		} catch (ClassNotFoundException | SQLException ex) {
			Logger.getLogger(Mysql.class.getName()).log(Level.SEVERE, null, ex);
		}
	}
	
	public static void aggiungiOrdine(Ordine o) throws SQLException, ClassNotFoundException {
		try (Connection conn = DriverManager.getConnection(q.URL, q.USER, q.PASSWORD);
				Statement stmt = conn.createStatement();
				PreparedStatement pstmt = conn.prepareStatement(q.NEW_ORDINE);) {
			
			Class.forName(q.DRIVER);
			pstmt.setInt(1, Integer.valueOf(o.getCodiceOrdine()));
			pstmt.setString(2, LocalDateTime.now().toString());
			pstmt.setFloat(3, Float.parseFloat(o.getImportoOrdine()));
			pstmt.setInt(4, Integer.valueOf(o.getCodiceCliente()));
			pstmt.setInt(5, Integer.valueOf(o.getCodiceLavoratore()));
			pstmt.execute();

		} catch (ClassNotFoundException | SQLException ex) {
			Logger.getLogger(Mysql.class.getName()).log(Level.SEVERE, null, ex);
		}
	}
	
	public static void aggiungiCliente(Cliente c) throws SQLException, ClassNotFoundException {
		try (Connection conn = DriverManager.getConnection(q.URL, q.USER, q.PASSWORD);
				Statement stmt = conn.createStatement();
				PreparedStatement pstmt = conn.prepareStatement(q.NEW_CLIENTE);) {
			
			Class.forName(q.DRIVER);
			pstmt.setInt(1, Integer.valueOf(c.getCodiceCliente()));
			pstmt.setInt(2, Integer.valueOf(c.getNumeroOrdini()));
			pstmt.setString(3, c.getNumeroTelefono());
			pstmt.setString(4, c.getEmail());
			pstmt.setInt(5, Integer.valueOf(c.getCodiceLavoratore()));
			pstmt.setString(6, c.getTipologiaCliente());
			
			pstmt.execute();

		} catch (ClassNotFoundException | SQLException ex) {
			Logger.getLogger(Mysql.class.getName()).log(Level.SEVERE, null, ex);
		}
	}
	
	public static void aggiungiPrivato(Cliente c) throws SQLException, ClassNotFoundException {
		try (Connection conn = DriverManager.getConnection(q.URL, q.USER, q.PASSWORD);
				Statement stmt = conn.createStatement();
				PreparedStatement pstmt = conn.prepareStatement(q.NEW_PRIVATO);) {
			
			Class.forName(q.DRIVER);
			pstmt.setString(1, c.getCodiceFiscale());
			pstmt.setInt(2, Integer.valueOf(c.getCodiceCliente()));
			pstmt.setString(3, c.getNome());
			pstmt.setString(4, c.getCognome());
			
			pstmt.execute();

		} catch (ClassNotFoundException | SQLException ex) {
			Logger.getLogger(Mysql.class.getName()).log(Level.SEVERE, null, ex);
		}
	}
	
	public static void aggiungiPartitaIva(Cliente c) throws SQLException, ClassNotFoundException {
		try (Connection conn = DriverManager.getConnection(q.URL, q.USER, q.PASSWORD);
				Statement stmt = conn.createStatement();
				PreparedStatement pstmt = conn.prepareStatement(q.NEW_PARTITAIVA);) {
			
			Class.forName(q.DRIVER);
			pstmt.setString(1, c.getPartitaIva());
			pstmt.setInt(2, Integer.valueOf(c.getCodiceCliente()));
			pstmt.setString(3, c.getNomeAzienda());
			
			pstmt.execute();

		} catch (ClassNotFoundException | SQLException ex) {
			Logger.getLogger(Mysql.class.getName()).log(Level.SEVERE, null, ex);
		}
	}
	
	
}
